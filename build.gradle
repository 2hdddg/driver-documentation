import org.ajoberstar.grgit.*

defaultTasks 'asciidoctor'

def projectVersion = '1.0'
def asciidoctorjVersion = '1.5.3.2'
def driverLanguahes = ['java', 'javascript', 'python']

buildscript {
    dependencies {
        ext {
            gradleVersion = '2.9'
            jrubyVersion = '1.7.23'
            asciidoctorPluginVersion = '1.5.3'
            asciidoctorjPdfVersion = '1.5.0-alpha.10.1'
            gradleGitVersion = '1.3.2'
        }

        classpath "org.asciidoctor:asciidoctor-gradle-plugin:$asciidoctorPluginVersion"
        classpath "org.asciidoctor:asciidoctorj-pdf:$asciidoctorjPdfVersion"
        classpath "org.ajoberstar:gradle-git:$gradleGitVersion"
        classpath "org.jruby:jruby-complete:$jrubyVersion"
    }

    repositories {
        jcenter()
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = gradleVersion
}

task('git-clone') {
    description 'Clones the driver sources from GitHub.'
    outputs.dir file("$buildDir/driver-sources")
    doLast {
        driverLanguahes.each { lang ->
            println "Cloning $lang-driver"
            def targetDir = targetGitdir(lang)
            Grgit.clone(dir: targetDir,
                    uri: "https://github.com/neo4j/neo4j-$lang-driver.git",
                    refToCheckout: 'master')
        }
    }
}

def targetGitdir(lang) {
    file("$buildDir/driver-sources/$lang-driver")
}

def commonAsciidoctorAttributes = [
        'project-version': projectVersion,
        'icons'          : 'font',
        'imagesdir'      : './images',
        'java-root'      : targetGitdir('java'),
        'javascript-root': targetGitdir('javascript'),
        'python-root'    : targetGitdir('python')
]

def htmlAsciidoctorAttributes = [
        'toc'        : 'left',
        'stylesdir'  : '../css/',
        'stylesheet' : 'github.css',
        'sectanchors': true,
        'docinfo1'   : true
]

def pdfAsciidoctorAttributes = [
        'source-highlighter': 'rouge',
]

apply plugin: 'org.asciidoctor.convert'

asciidoctorj {
    version = asciidoctorjVersion
}

asciidoctor {
    backends 'html5'
    sourceDir "${projectDir}/src/main/asciidoc"
    sources {
        include 'index.adoc'
    }
    resources {
        from(sourceDir) {
            include 'images/**'
        }
        from(sourceDir.getParentFile()) {
            include 'css/**'
            include 'javascript/**'
        }
    }
    attributes commonAsciidoctorAttributes
    attributes htmlAsciidoctorAttributes
}
asciidoctor.dependsOn 'git-clone'

if (project.hasProperty('pdf')) {
    asciidoctor {
        backends 'pdf'
        attributes commonAsciidoctorAttributes
        attributes pdfAsciidoctorAttributes
    }
}

task buildScriptDependencies(type: org.gradle.api.tasks.diagnostics.DependencyReportTask) {
    configurations = project.buildscript.configurations
}

